We are going to focus on open source libraries and compilers.
As such, we are not going to use the IAR compiler, but gcc with an ARM backend.

This is an example command of how to compile using arm gcc:

arm-none-eabi-gcc -std=gnu99 -D__REDLIB__ -DCPU_MK22FN512VLH12 -DCPU_MK22FN512VLH12_cm4 -DFRDM_K22F 
-DFREEDOM -DSDK_DEBUGCONSOLE=0 -DCR_INTEGER_PRINTF -DPRINTF_FLOAT_ENABLE=0 -D__MCUXPRESSO -D__USE_CMSIS 
-DDEBUG -I../board -I../source -I../ -I../drivers -I../device -I../CMSIS -I../utilities -I../component/lists 
-I../component/serial_manager -I../component/uart -O0 -fno-common -g3 -Wall -c  -ffunction-sections  
-fdata-sections  -ffreestanding  -fno-builtin -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -mthumb -D__REDLIB__ 
-fstack-usage -specs=redlib.specs -MMD -MP -MF"board/pin_mux.d" -MT"board/pin_mux.o" -MT"board/pin_mux.d" -o "board/pin_mux.o" "../board/pin_mux.c"

And this of how to link:

arm-none-eabi-gcc -nostdlib -Xlinker -Map="frdmk22f_led_blinky.map" -Xlinker --gc-sections 
-Xlinker -print-memory-usage -Xlinker --sort-section=alignment -Xlinker --cref -mcpu=cortex-m4 
-mfpu=fpv4-sp-d16 -mfloat-abi=hard -mthumb -T frdmk22f_led_blinky_Debug.ld -o "frdmk22f_led_blinky.axf"  
./utilities/fsl_assert.o ./utilities/fsl_debug_console.o ./utilities/fsl_str.o  ./startup/startup_mk22f51212.o  
./source/led_blinky.o ./source/semihost_hardfault.o  ./drivers/fsl_clock.o ./drivers/fsl_common.o ./drivers/fsl_gpio.o 
./drivers/fsl_lpuart.o ./drivers/fsl_smc.o ./drivers/fsl_uart.o  ./device/system_MK22F51212.o  
./component/uart/uart_adapter.o  ./component/serial_manager/serial_manager.o ./component/serial_manager/serial_port_uart.o  
./component/lists/generic_list.o  ./board/board.o ./board/clock_config.o ./board/pin_mux.o 

These examples were taken from example code from NXP's SDKs. I recommend you download MCUXpresso, generate the right SDK, 
which in this case is for the K22 FRDM board, and give it a go.

These commands are generated by provided makefiles, which I will add as examples in this repo.
If anyone can provide more complete, functional examples, I would be thankful. (ML)

Hello